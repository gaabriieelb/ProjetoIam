/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iamSoftware.Interfaces;

import iamSoftware.Classes.*;
import static iamSoftware.Interfaces.Produtos.tblProdutos;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author ga_br
 */
public class Inventario extends javax.swing.JFrame {
    
    String tela;
    
    /**
     * Creates new form PDVCaixa
     */
    public Inventario() {
        initComponents();
        this.getContentPane().setBackground(Color.white);
        this.setLocationRelativeTo(null);
        radioContem.setSelected(true);

        try {
            GerarEstoque();
        } catch (SQLException ex) {
            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public Inventario(String tela) {
        initComponents();
        this.getContentPane().setBackground(Color.white);
        this.setLocationRelativeTo(null);
        radioContem.setSelected(true);
       
        this.tela = tela;
       
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fieldNome = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        radioIgual = new javax.swing.JRadioButton();
        radioContem = new javax.swing.JRadioButton();
        radioInicio = new javax.swing.JRadioButton();
        radioFim = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 255));

        tblProdutos.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Qtd. Comprada", "Qtd. Vendida", "Disponível", "Qtd. Contada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Float.class, java.lang.Float.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProdutos);
        if (tblProdutos.getColumnModel().getColumnCount() > 0) {
            tblProdutos.getColumnModel().getColumn(1).setPreferredWidth(13);
        }

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        jButton6.setText("Fechar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(79, 129, 199));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Inventário");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(597, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(245, 135, 66));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Produto:");

        fieldNome.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N
        jButton8.setFocusPainted(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        radioIgual.setBackground(new java.awt.Color(255, 255, 255));
        radioIgual.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        radioIgual.setText("Igual");
        radioIgual.setFocusPainted(false);
        radioIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioIgualActionPerformed(evt);
            }
        });

        radioContem.setBackground(new java.awt.Color(255, 255, 255));
        radioContem.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        radioContem.setText("Contêm");
        radioContem.setFocusPainted(false);
        radioContem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioContemActionPerformed(evt);
            }
        });

        radioInicio.setBackground(new java.awt.Color(255, 255, 255));
        radioInicio.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        radioInicio.setText("Início");
        radioInicio.setFocusPainted(false);
        radioInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioInicioActionPerformed(evt);
            }
        });

        radioFim.setBackground(new java.awt.Color(255, 255, 255));
        radioFim.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        radioFim.setText("Fim");
        radioFim.setFocusPainted(false);
        radioFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFimActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Forma de Busca:");

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/insert.png"))); // NOI18N
        jButton4.setText("Inserir Quantidade Contada");
        jButton4.setFocusPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(fieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(radioContem)
                                        .addGap(18, 18, 18)
                                        .addComponent(radioIgual)
                                        .addGap(18, 18, 18)
                                        .addComponent(radioInicio)
                                        .addGap(18, 18, 18)
                                        .addComponent(radioFim)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioIgual)
                    .addComponent(radioContem)
                    .addComponent(radioInicio)
                    .addComponent(radioFim)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(fieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioIgualActionPerformed
        radioContem.setSelected(false);
        radioFim.setSelected(false);
        radioInicio.setSelected(false);
    }//GEN-LAST:event_radioIgualActionPerformed

    private void radioContemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioContemActionPerformed
        radioIgual.setSelected(false);
        radioFim.setSelected(false);
        radioInicio.setSelected(false);
    }//GEN-LAST:event_radioContemActionPerformed

    private void radioInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioInicioActionPerformed
        radioContem.setSelected(false);
        radioFim.setSelected(false);
        radioIgual.setSelected(false);
    }//GEN-LAST:event_radioInicioActionPerformed

    private void radioFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFimActionPerformed
        radioContem.setSelected(false);
        radioIgual.setSelected(false);
        radioInicio.setSelected(false);
    }//GEN-LAST:event_radioFimActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String sql ="";
        String nome = "";
        
        nome = fieldNome.getText();
        
        if(radioIgual.isSelected()){
           sql = "SELECT nome FROM `produtos` WHERE nome LIKE '"+nome+"'";
        }
        if(radioContem.isSelected()){
           sql = "SELECT nome FROM `produtos` WHERE nome LIKE '%"+nome+"%'";
        }
        if(radioInicio.isSelected()){
            sql = "SELECT nome FROM `produtos` WHERE nome LIKE '"+nome+"%'";
        }
        if(radioFim.isSelected()){
           sql = "SELECT nome FROM `produtos` WHERE nome LIKE '%"+nome+"'";
        }
        
        try {
           GerarEstoque2(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        int row = tblProdutos.getSelectedRow();
        String produto = (String) tblProdutos.getValueAt(row, 0);
        
        
        InserirQuantidade inserirQuantidade = new InserirQuantidade(produto);
        inserirQuantidade.setVisible(true);
        
        
    }//GEN-LAST:event_jButton4ActionPerformed
        
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventario().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField fieldNome;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioContem;
    private javax.swing.JRadioButton radioFim;
    private javax.swing.JRadioButton radioIgual;
    private javax.swing.JRadioButton radioInicio;
    public static javax.swing.JTable tblProdutos;
    // End of variables declaration//GEN-END:variables
    
   
    
    
    public void PreencherTabela(String sql) throws SQLException {
        DefaultTableModel tabela = (DefaultTableModel) tblProdutos.getModel();

        tabela.setRowCount(0);
        
        Connection conn = ConexaoBD.Conectar();
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();

        List<ProdutosData> produtoslist = new ArrayList<ProdutosData>();

        while (rs.next()) {
            Object[] dados = new Object[4];
            dados[0] = rs.getInt("id");
            dados[1] = rs.getString("codigo");
            dados[2] = rs.getString("nome");            
            dados[3] = rs.getDouble("valorVenda");
            
            tabela.addRow(dados);
        }

    }
    
    public static void GerarEstoque() throws SQLException{
    
        DefaultTableModel tabela = (DefaultTableModel) tblProdutos.getModel();
        tabela.setRowCount(0);
        
         //pega todos nomes de produtos
        ArrayList<String> produtos = new ArrayList<>();
        ArrayList<Float> quantidade = new ArrayList<>();
        ArrayList<Double> vendido = new ArrayList<>();
        ArrayList<Double> contado = new ArrayList<>();
        
        float soma = 0;
        double soma2 = 0;
        double qtd = 0;
        
        String sql = "SELECT nome FROM `produtos`";
        
        
        
        Connection conn = ConexaoBD.Conectar();
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
              
        
        while (rs.next()) {            
            produtos.add(rs.getString("nome"));            
        }
        
       
        //soma todas quantidades de cada produtos
                
        for(int i = 0; i < produtos.size(); i++){
            String sql2 = "SELECT quantidade FROM `notas` WHERE nomeproduto='"+produtos.get(i)+"'";
            stmt = conn.prepareStatement(sql2);
            rs = stmt.executeQuery();
            while (rs.next()) {            
                soma+=rs.getFloat("quantidade");            
            }
            quantidade.add(i,soma);
            soma = 0;
            
            String sql3 = "SELECT quantidade FROM `itenscompras` WHERE produto='"+produtos.get(i)+"'";
            stmt = conn.prepareStatement(sql3);
            rs = stmt.executeQuery();
            while (rs.next()) {            
                soma2+=rs.getDouble("quantidade");            
            }
            vendido.add(i,soma2);
            soma2 = 0;
            
            String sql4 = "SELECT quantidadecontada FROM `inventario` WHERE produto='"+produtos.get(i)+"'";
            stmt = conn.prepareStatement(sql4);
            rs = stmt.executeQuery();
            while (rs.next()) {            
                qtd =rs.getDouble("quantidadecontada");                
            }
            contado.add(qtd);
            qtd = 0;
            
        }
        
        for (int j =0; j < produtos.size(); j++){
            Object[] dados = new Object[5];
            dados[0] = produtos.get(j);
            dados[1] = quantidade.get(j);
            dados[2] = vendido.get(j);
            double sub = quantidade.get(j) - vendido.get(j);
            dados[3] = sub;
            dados[4] = contado.get(j);
            
            tabela.addRow(dados);
        }
        
    }
    
    public void GerarEstoque2(String sql) throws SQLException{
    
        DefaultTableModel tabela = (DefaultTableModel) tblProdutos.getModel();
        tabela.setRowCount(0);
        
         //pega todos nomes de produtos
        ArrayList<String> produtos = new ArrayList<>();
        ArrayList<Float> quantidade = new ArrayList<>();
        ArrayList<Double> vendido = new ArrayList<>();
        float soma = 0;
        double soma2 = 0;
        
        //String sql = "SELECT nome FROM `produtos`";
        
        
        
        Connection conn = ConexaoBD.Conectar();
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
              
        
        while (rs.next()) {            
            produtos.add(rs.getString("nome"));            
        }
        
       
        //soma todas quantidades de cada produtos
                
        for(int i = 0; i < produtos.size(); i++){
            String sql2 = "SELECT quantidade FROM `notas` WHERE nomeproduto='"+produtos.get(i)+"'";
            stmt = conn.prepareStatement(sql2);
            rs = stmt.executeQuery();
            while (rs.next()) {            
                soma+=rs.getFloat("quantidade");            
            }
            quantidade.add(i,soma);
            soma = 0;
            
            String sql3 = "SELECT quantidade FROM `itenscompras` WHERE produto='"+produtos.get(i)+"'";
            stmt = conn.prepareStatement(sql3);
            rs = stmt.executeQuery();
            while (rs.next()) {            
                soma2+=rs.getDouble("quantidade");            
            }
            vendido.add(i,soma2);
            soma2 = 0;
        }
        
        for (int j =0; j < produtos.size(); j++){
            Object[] dados = new Object[4];
            dados[0] = produtos.get(j);
            dados[1] = quantidade.get(j);
            dados[2] = vendido.get(j);
            double sub = quantidade.get(j) - vendido.get(j);
            dados[3] = sub;
            
            tabela.addRow(dados);
        }
        
    }
    
    
    

}


