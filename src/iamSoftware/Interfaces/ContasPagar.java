/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iamSoftware.Interfaces;

import iamSoftware.Classes.ClientesData;
import iamSoftware.Classes.ConexaoBD;
import iamSoftware.Classes.ContasPagarData;
import iamSoftware.Classes.FornecedorData;
import iamSoftware.Classes.NotaFiscalData;
import iamSoftware.Classes.ProdutosData;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ga_br
 */
public class ContasPagar extends javax.swing.JFrame {
    
    public static DefaultTableModel tblstatic;
    public static String data;
    String status = "Todos";
    /**
     * Creates new form Clientes
     */
    public ContasPagar() {
        initComponents();
        this.getContentPane().setBackground(Color.white);
        this.setLocationRelativeTo(null);
        jScrollPane1.getViewport().setBackground(Color.white);
        tblFornecedores.setBackground(Color.white);
        
        try {
            PreencherTabela();
        } catch (SQLException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblFornecedores = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        buttonCadastrar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        buttonCadastrar2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        radioTodos = new javax.swing.JRadioButton();
        radioEmAberto = new javax.swing.JRadioButton();
        radioLiquidado = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        fieldFornecedor = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        fieldPeriodoInicial = new javax.swing.JFormattedTextField();
        fieldPeriodoFinal = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        buttonCadastrar3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblFornecedores.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblFornecedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "N°  Doc", "Fornecedor", "Valor", "Parcela", "Vencimento", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFornecedores.setGridColor(new java.awt.Color(0, 0, 0));
        tblFornecedores.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblFornecedores);
        if (tblFornecedores.getColumnModel().getColumnCount() > 0) {
            tblFornecedores.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jButton6.setText("Excluir");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        buttonCadastrar.setBackground(new java.awt.Color(255, 255, 255));
        buttonCadastrar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        buttonCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clipboard.png"))); // NOI18N
        buttonCadastrar.setText("Cadastrar");
        buttonCadastrar.setFocusPainted(false);
        buttonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrarActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(79, 129, 199));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Contas a Pagar");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(245, 135, 66));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        buttonCadastrar2.setBackground(new java.awt.Color(255, 255, 255));
        buttonCadastrar2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        buttonCadastrar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cash.png"))); // NOI18N
        buttonCadastrar2.setText("Liquidar");
        buttonCadastrar2.setFocusPainted(false);
        buttonCadastrar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrar2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Filtrar Status:");

        radioTodos.setBackground(new java.awt.Color(255, 255, 255));
        radioTodos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        radioTodos.setText("Todos");
        radioTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTodosActionPerformed(evt);
            }
        });

        radioEmAberto.setBackground(new java.awt.Color(255, 255, 255));
        radioEmAberto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        radioEmAberto.setText("Em Aberto");
        radioEmAberto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioEmAbertoActionPerformed(evt);
            }
        });

        radioLiquidado.setBackground(new java.awt.Color(255, 255, 255));
        radioLiquidado.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        radioLiquidado.setText("Liquidado");
        radioLiquidado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioLiquidadoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Fornecedor:");

        fieldFornecedor.setEditable(false);
        fieldFornecedor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N
        jButton7.setText("Buscar");
        jButton7.setFocusPainted(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        try {
            fieldPeriodoInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fieldPeriodoInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPeriodoInicialActionPerformed(evt);
            }
        });

        try {
            fieldPeriodoFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fieldPeriodoFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPeriodoFinalActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Período:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("a");

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N
        jButton8.setFocusPainted(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        buttonCadastrar3.setBackground(new java.awt.Color(255, 255, 255));
        buttonCadastrar3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        buttonCadastrar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/money (1).png"))); // NOI18N
        buttonCadastrar3.setText("Baixa Parcial");
        buttonCadastrar3.setFocusPainted(false);
        buttonCadastrar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(radioTodos)
                            .addGap(18, 18, 18)
                            .addComponent(radioEmAberto)
                            .addGap(18, 18, 18)
                            .addComponent(radioLiquidado)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(fieldFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton8)
                            .addGap(20, 20, 20)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(fieldPeriodoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(fieldPeriodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCadastrar2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCadastrar3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldPeriodoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fieldPeriodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(radioTodos)
                    .addComponent(radioEmAberto)
                    .addComponent(radioLiquidado)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCadastrar2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCadastrar3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        ContasPagarData contaspagar = new ContasPagarData();
        DefaultTableModel tabela = (DefaultTableModel) tblFornecedores.getModel();
        int row = tblFornecedores.getSelectedRow();
        String numeronota = (String) tabela.getValueAt(row, 1);
         
        try {
            contaspagar.Remover(numeronota);
            PreencherTabela();
            Mensagem msg = new Mensagem("Registro excluido com sucesso!");
            msg.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Produtos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void buttonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrarActionPerformed
        CadastroContasPagar cadastrocontaspagar = new CadastroContasPagar();
        cadastrocontaspagar.setVisible(true);
    }//GEN-LAST:event_buttonCadastrarActionPerformed

    private void buttonCadastrar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrar2ActionPerformed
        ContasPagarData contaspagar = new ContasPagarData();
        
        DefaultTableModel tabela = (DefaultTableModel) tblFornecedores.getModel();
        int row = tblFornecedores.getSelectedRow();
        int id = (int) tabela.getValueAt(row, 0);
        
        try {
            contaspagar.Liquidar(id);
            PreencherTabela();
            Mensagem msg = new Mensagem("Conta Liquidada com sucesso!");
            msg.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonCadastrar2ActionPerformed

    private void radioTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTodosActionPerformed
        status = "Todos";
        radioEmAberto.setSelected(false);
        radioLiquidado.setSelected(false);
        try {
            PreencherTabela();
        } catch (SQLException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioTodosActionPerformed

    private void radioEmAbertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioEmAbertoActionPerformed
        status = "Em Aberto";
        radioTodos.setSelected(false);
        radioLiquidado.setSelected(false);
        try {
            PreencherTabela("Em Aberto");
        } catch (SQLException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioEmAbertoActionPerformed

    private void radioLiquidadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioLiquidadoActionPerformed
        status = "Liquidado";
        radioEmAberto.setSelected(false);
        radioTodos.setSelected(false);
       
        try {
            PreencherTabela("Liquidado");
        } catch (SQLException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioLiquidadoActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String fornecedor = fieldFornecedor.getText();
        String periodoInicial = fieldPeriodoInicial.getText();
        String periodoFinal = fieldPeriodoFinal.getText();
        String sql = "";
        String datainicial="", datafinal="";
        
        if(!periodoInicial.equalsIgnoreCase("") && !periodoFinal.equalsIgnoreCase("")){            
            datainicial = converterToDataBase(periodoInicial);
            datafinal = converterToDataBase(periodoFinal);
        }
        
        if(periodoInicial.equalsIgnoreCase("  /  /    ") || periodoFinal.equalsIgnoreCase("  /  /    ")){
            Mensagem msg = new Mensagem("Preencha os campos Data Inicial e Final");
            msg.setVisible(true);
        }
        if(fornecedor.equalsIgnoreCase("") && !periodoInicial.equalsIgnoreCase("  /  /    ") && !periodoFinal.equalsIgnoreCase("  /  /    ")){
           sql= "SELECT * FROM `contaspagar` WHERE vencimento BETWEEN '"+datainicial+"' AND '"+datafinal+"' ORDER BY vencimento ASC";
            try {
                BuscaFiltrada(sql);
            } catch (SQLException ex) {
                Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(!fornecedor.equalsIgnoreCase("") && !periodoInicial.equalsIgnoreCase("  /  /    ") && !periodoFinal.equalsIgnoreCase("  /  /    ")){
            if(status.equalsIgnoreCase("todos")){
                sql = "SELECT * FROM `contaspagar` WHERE vencimento BETWEEN '"+datainicial+"' AND '"+datafinal+"' AND fornecedor='"+fornecedor+"' ORDER BY vencimento ASC";
                try {
                    BuscaFiltrada(sql);
                } catch (SQLException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(!status.equalsIgnoreCase("todos")){
                sql = "SELECT * FROM `contaspagar` WHERE vencimento BETWEEN '"+datainicial+"' AND '"+datafinal+"' AND fornecedor='"+fornecedor+"' AND status='"+status+"' ORDER BY vencimento ASC";
                try {
                    BuscaFiltrada(sql);
                } catch (SQLException ex) {
                    Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
            
        
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void fieldPeriodoInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPeriodoInicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPeriodoInicialActionPerformed

    private void fieldPeriodoFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPeriodoFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPeriodoFinalActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        PesquisaFornecedor pesquisafornecedor = new PesquisaFornecedor("contaspagar");
        pesquisafornecedor.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void buttonCadastrar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrar3ActionPerformed
       
        DefaultTableModel tabela = (DefaultTableModel) tblFornecedores.getModel();
        int row = tblFornecedores.getSelectedRow();
        int id = (int) tabela.getValueAt(row, 0);
         
        BaixaParcialContasPagar baixaParcialContasPagar = new BaixaParcialContasPagar(id);
        baixaParcialContasPagar.setVisible(true);
    }//GEN-LAST:event_buttonCadastrar3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContasPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContasPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContasPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContasPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContasPagar().setVisible(true);
            }
        });
    }
    
    public void PreencherTabela() throws SQLException{
        DefaultTableModel tabela = (DefaultTableModel) tblFornecedores.getModel();
        
        tabela.setRowCount(0);
        
        String sql = "SELECT * FROM `contaspagar` ORDER BY `vencimento` ASC";
        
        Connection conn = ConexaoBD.Conectar();           
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
        
        List<ProdutosData> produtoslist = new ArrayList<ProdutosData>();
             
        while(rs.next()){
            Object[] dados = new Object[7];
            dados[0] = rs.getInt("id");
            dados[1] = rs.getString("numerodocumento");
            dados[2] = rs.getString("fornecedor");
            dados[3] = rs.getString("valor");
            dados[4] = rs.getString("numeroparcela");
            dados[5] = rs.getString("vencimento");
            
            String data = (String) dados[5];
            char[] dataArray = data.toCharArray();
            data = conveter(dataArray);
            dados[5] = data;
            
            dados[6] = rs.getString("status");
            
            
            tabela.addRow(dados);
        }       
    }
    
    public void PreencherTabela(String Status) throws SQLException{
        DefaultTableModel tabela = (DefaultTableModel) tblFornecedores.getModel();
        
        tabela.setRowCount(0);
        
        String sql = "SELECT * FROM `contaspagar` WHERE status= '"+Status+"' ORDER BY `vencimento` ASC";
        
        Connection conn = ConexaoBD.Conectar();           
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
        
        List<ProdutosData> produtoslist = new ArrayList<ProdutosData>();
             
        while(rs.next()){
            Object[] dados = new Object[7];
            dados[0] = rs.getInt("id");                        
            dados[1] = rs.getString("numerodocumento");
            dados[2] = rs.getString("fornecedor");
            dados[3] = rs.getString("valor");
            dados[4] = rs.getString("numeroparcela");
            dados[5] = rs.getString("vencimento");
            
            String data = (String) dados[5];
            char[] dataArray = data.toCharArray();
            data = conveter(dataArray);
            dados[5] = data;            
            dados[6] = rs.getString("status");            
            
            tabela.addRow(dados);
        }       
    }
    
    public void BuscaFiltrada(String sql) throws SQLException{
        DefaultTableModel tabela = (DefaultTableModel) tblFornecedores.getModel();
        
        tabela.setRowCount(0);      
               
        Connection conn = ConexaoBD.Conectar();           
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
        
        List<ProdutosData> produtoslist = new ArrayList<ProdutosData>();
             
        while(rs.next()){
            Object[] dados = new Object[7];
            dados[0] = rs.getInt("id");                        
            dados[1] = rs.getString("numerodocumento");
            dados[2] = rs.getString("fornecedor");
            dados[3] = rs.getString("valor");
            dados[4] = rs.getString("numeroparcela");
            dados[5] = rs.getString("vencimento");
            
            String data = (String) dados[5];
            char[] dataArray = data.toCharArray();
            data = conveter(dataArray);
            dados[5] = data;            
            dados[6] = rs.getString("status");            
            
            tabela.addRow(dados);
        }       
    }
    
    public static void Atualizar() throws SQLException{
        tblstatic = (DefaultTableModel) tblFornecedores.getModel();
        
        tblstatic.setRowCount(0);
        
        String sql = "SELECT * FROM `contaspagar` ORDER BY `vencimento` ASC";
        
        Connection conn = ConexaoBD.Conectar();           
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
        
        List<ProdutosData> produtoslist = new ArrayList<ProdutosData>();
             
        while(rs.next()){
            Object[] dados = new Object[7];
            dados[0] = rs.getInt("id");
            dados[1] = rs.getString("numerodocumento");
            dados[2] = rs.getString("fornecedor");
            dados[3] = rs.getString("valor");
            dados[4] = rs.getString("numeroparcela");
            dados[5] = rs.getString("vencimento");
            
            data = (String) dados[5];
            char[] dataArray = data.toCharArray();
            data = conveter(dataArray);
            dados[5] = data;
            
            dados[6] = rs.getString("status");
            
            
            tblstatic.addRow(dados);
        }       
    }
    
    
    public static String conveter(char[] dataArray){
    
        String dataString = dataArray[8]+""+dataArray[9]+"/"+dataArray[5]+""+dataArray[6]+"/20"+dataArray[2]+dataArray[3];  
        
    return dataString;    
    }
    
    
    public String converterToDataBase(String data){
        char [] dataArray = data.toCharArray();
        data = dataArray[6]+""+dataArray[7]+""+dataArray[8]+""+dataArray[9]+"-"+dataArray[3]+""+dataArray[4]+"-"+dataArray[0]+""+dataArray[1];
        return data;        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCadastrar;
    private javax.swing.JButton buttonCadastrar2;
    private javax.swing.JButton buttonCadastrar3;
    public static javax.swing.JTextField fieldFornecedor;
    private javax.swing.JFormattedTextField fieldPeriodoFinal;
    private javax.swing.JFormattedTextField fieldPeriodoInicial;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioEmAberto;
    private javax.swing.JRadioButton radioLiquidado;
    private javax.swing.JRadioButton radioTodos;
    public static javax.swing.JTable tblFornecedores;
    // End of variables declaration//GEN-END:variables
}
